;(function($,window,document,undefined){'use strict';var specialComponents={'value':{updateFacet:function(data){var me=this;if(me.isChecked(me.$inputs)){return;}
me.disable(me.$el,data===null);me.disable(me.$inputs,data===null);}},'value-list':{updateFacet:function(data){this.updateValueList(data);}},'value-list-single':{compOpts:{checkboxSelector:'input[type="checkbox"]'},initComponent:function(){var me=this;me.$inputs=me.$el.find(me.opts.checkboxSelector);me.registerComponentEvents();},validateComponentShouldBeDisabled:function(data,values,checkedIds){if(checkedIds.length>0){return false;}
if(values&&values.length<=0){return true;}
return data==null;},registerComponentEvents:function(){var me=this;me._on(me.$inputs,'change',function(event){var $el=$(event.currentTarget);if($el.is(':checked')){me.$inputs.not($el).attr('disabled','disabled').parent().addClass('is--disabled');}
me.onChange(event);});},updateFacet:function(data){this.updateValueList(data);},validateElementShouldBeDisabled:function($element,activeIds,ids,checkedIds,value){var val=$element.val();if(checkedIds.length>0){return checkedIds.indexOf(val)===-1;}
if(activeIds.length>0){return activeIds.indexOf(val)===-1;}
return ids.indexOf(val)===-1;}},'radio':{compOpts:{radioInputSelector:'input[type="radio"]'},initComponent:function(){var me=this;me.$radioInputs=me.$el.find(me.opts.radioInputSelector);me.$inputs=me.$radioInputs;me.registerComponentEvents();},registerComponentEvents:function(){var me=this;me._on(me.$radioInputs,'change',function(event){me.onChange(event);});},updateFacet:function(data){this.updateValueList(data);}},'value-tree':{updateFacet:function(data){this.updateValueList(data);},getValueIds:function(values){var ids=[];$(values).each(function(index,value){ids.push(value.id+'');});return ids;},registerComponentEvents:function(){var me=this;me._on(me.$inputs,'change',function(event){var $el=$(event.currentTarget);if($el.is(':checked')){me.$inputs.not($el).attr('disabled','disabled').parent().addClass('is--disabled');me.$inputs.not($el).prop('checked',false);}else{me.$inputs.removeAttr('disabled').parent().removeClass('is--disabled');}
me.onChange(event);});},getValues:function(data,$elements){return this.recursiveGetValues(data.values);},recursiveGetValues:function(values){var items=[];var me=this;$(values).each(function(index,value){items.push(value);if(value.values.length>0){items=items.concat(me.recursiveGetValues(value.values));}});return items;}},'value-tree-single':{updateFacet:function(data){this.updateValueList(data);},registerComponentEvents:function(){var me=this;me._on(me.$inputs,'change',function(event){var $el=$(event.currentTarget);if($el.is(':checked')){me.$inputs.not($el).attr('disabled','disabled').parent().addClass('is--disabled');me.$inputs.not($el).prop('checked',false);}
me.onChange(event);});},getValues:function(data,$elements){if(!data||!data.values){return[];}
return this.recursiveGetValues(data.values);},recursiveGetValues:function(values){var me=this,items=[];$(values).each(function(index,value){value.id=value.id+'';items.push(value);if(value.values.length>0){items=items.concat(me.recursiveGetValues(value.values));}});return items;},validateElementShouldBeDisabled:function($element,activeIds,ids,checkedIds,value){var val=$element.val();if(activeIds.length>0){return activeIds.indexOf(val)===-1;}
if(checkedIds.length>0){return checkedIds.indexOf(val)===-1;}
return ids.indexOf(val)===-1;}},'range':{compOpts:{rangeSliderSelector:'*[data-range-slider="true"]'},initComponent:function(){var me=this;me.$rangeSliderEl=me.$el.find(me.opts.rangeSliderSelector);me.$rangeInputs=me.$rangeSliderEl.find('input');me.rangeSlider=me.$rangeSliderEl.data('plugin_swRangeSlider');me.registerComponentEvents();},updateFacet:function(data){var me=this,initial,isFiltered;initial=me.rangeSlider.opts;isFiltered=(me.rangeSlider.minValue!=initial.rangeMin||me.rangeSlider.maxValue!=initial.rangeMax);if(!isFiltered&&data){isFiltered=data.activeMin!==data.min||data.activeMax!==data.max;}
if(isFiltered){me.disableComponent(false);return;}
if(data===null){me.disableComponent(true);return;}
if(data.min==data.max){me.disableComponent(true);return;}
me.disableComponent(false);me.rangeSlider.opts.rangeMax=data.max;me.rangeSlider.opts.rangeMin=data.min;me.rangeSlider.opts.startMax=data.activeMax;me.rangeSlider.opts.startMin=data.activeMin;me.rangeSlider.computeBaseValues();},registerComponentEvents:function(){var me=this;me._on(me.$rangeInputs,'change',$.proxy(me.onChange,me));}},'rating':{compOpts:{starInputSelector:'.filter-panel--star-rating input'},initComponent:function(){var me=this;me.$starInputs=me.$el.find(me.opts.starInputSelector);me.$inputs=me.$starInputs;me.registerComponentEvents();},registerComponentEvents:function(){var me=this;me._on(me.$starInputs,'change',function(event){var $el=$(event.currentTarget);me.$starInputs.parents('.rating-star--outer-container').removeClass('is--active');me.$starInputs.not($el).prop('checked',false);if($el.is(':checked')){$el.parents('.rating-star--outer-container').addClass('is--active');$el.removeAttr('disabled');}
me.onChange(event);});},updateFacet:function(data){this.updateValueList(data);},validateElementShouldBeDisabled:function($element,activeIds,ids,checkedIds,value){var val=$element.val();if(value){return false;}
return checkedIds.indexOf(val)===-1;},setDisabledClass:function($element,disabled){$element.removeClass('is--disabled');$element.parents('.rating-star--outer-container').removeClass('is--disabled');if(disabled){$element.addClass('is--disabled');$element.parents('.rating-star--outer-container').addClass('is--disabled');}}}};$.plugin('swFilterComponent',{defaults:{type:'value',facetName:null,collapseCls:'is--collapsed',titleSelector:'.filter-panel--title',checkBoxSelector:'input[type="checkbox"]'},init:function(){var me=this;me.applyDataAttributes();me.type=me.$el.attr('data-filter-type')||me.opts.type;me.facetName=me.$el.attr('data-facet-name');me.$title=me.$el.find(me.opts.titleSelector);me.$siblings=me.$el.siblings('*[data-filter-type]');if(specialComponents[me.type]!==undefined){$.extend(me,specialComponents[me.type]);$.extend(me.opts,me.compOpts);}
me.initComponent();me.registerEvents();me.subscribeEvents();},subscribeEvents:function(){var me=this;$.subscribe(me.getEventName('plugin/swListingActions/onGetFilterResultFinished'),$.proxy(me.onUpdateFacets,me));},onUpdateFacets:function(event,plugin,response){var me=this;if(!response.hasOwnProperty('facets')){return;}
var facet=me.getFacet(response.facets,me.facetName);me.updateFacet(facet);},initComponent:function(){var me=this;me.$inputs=me.$el.find(me.opts.checkBoxSelector);me.registerComponentEvents();$.publish('plugin/swFilterComponent/onInitComponent',[me]);},registerEvents:function(){var me=this;if(me.type!='value'){me._on(me.$title,'click',$.proxy(me.toggleCollapse,me,true));}
$.publish('plugin/swFilterComponent/onRegisterEvents',[me]);},registerComponentEvents:function(){var me=this;me._on(me.$inputs,'change',$.proxy(me.onChange,me));$.publish('plugin/swFilterComponent/onRegisterComponentEvents',[me]);},onChange:function(event){var me=this,$el=$(event.currentTarget);me.$el.trigger('onChange',[me,$el]);$.publish('plugin/swFilterComponent/onChange',[me,event]);},getType:function(){return this.type;},open:function(closeSiblings){var me=this;if(closeSiblings){me.$siblings.removeClass(me.opts.collapseCls);}
me.$el.addClass(me.opts.collapseCls);$.publish('plugin/swFilterComponent/onOpen',[me]);},close:function(){var me=this;me.$el.removeClass(me.opts.collapseCls);$.publish('plugin/swFilterComponent/onClose',[me]);},toggleCollapse:function(){var me=this,shouldOpen=!me.$el.hasClass(me.opts.collapseCls);if(me.$el.hasClass('is--disabled')){me.close();return;}
if(shouldOpen){me.open(true);}else{me.close();}
$.publish('plugin/swFilterComponent/onToggleCollapse',[me,shouldOpen]);},destroy:function(){var me=this;me._destroy();},updateFacet:function(data){},updateValueList:function(data){var me=this,$elements,values,ids,activeIds,checkedIds;$elements=me.convertToElementList(me.$inputs);values=me.getValues(data,$elements);values=me.convertValueIds(values);ids=me.getValueIds(values);activeIds=me.getActiveValueIds(values);checkedIds=me.getElementValues(me.getCheckedElements($elements));if(me.validateComponentShouldBeDisabled(data,values,checkedIds)){me.disableAll($elements,values);return;}
$elements.each(function(index,$element){var val=$element.val()+'';var value=me.findValue(val,values);var disable=me.validateElementShouldBeDisabled($element,activeIds,ids,checkedIds,value);me.disable($element,disable);me.setDisabledClass($element.parents('.filter-panel--input'),disable);});me.disableComponent(me.allDisabled($elements));},convertValueIds:function(values){values.forEach(function(value,index){value.id=value.id+'';});return values;},disableComponent:function(disable){if(disable&&this.$el.hasClass(this.opts.collapseCls)){this.close();}
this.setDisabledClass(this.$el,disable);},validateComponentShouldBeDisabled:function(data,values,checkedIds){return data==null&&checkedIds.length<=0;},disableAll:function($elements,values){var me=this;$elements.each(function(index,$element){me.disable($element,true);me.setDisabledClass($element.parents('.filter-panel--input'),true);});me.disableComponent(true);},validateElementShouldBeDisabled:function($element,activeIds,ids,checkedIds,value){var val=$element.val()+'';if(activeIds.indexOf(val)>=0){return false;}else if(ids.indexOf(val)>=0){return false;}else if(checkedIds.indexOf(val)>=0){return false;}
return true;},getFacet:function(facets,name){var found=null;facets.forEach(function(facet,index){if(facet.facetName==name){found=facet;return false;}});return found;},isChecked:function($element){return $element.is(':checked');},getCheckedElements:function($elements){var actives=[],me=this;$elements.each(function(index,$element){if(me.isChecked($element)){actives.push($element);}});return actives;},getElementValues:function($elements){return $elements.map(function($element){return $element.val()+'';});},findValue:function(val,values){var value=null;$(values).each(function(index,item){if(item.id==val){value=item;}});return value;},disable:function($element,disabled){this.setDisabledClass($element,disabled);this.disableElement($element,disabled);},disableElement:function($element,disabled){$element.removeAttr('disabled');if(disabled){$element.prop('disabled','disabled');}},setDisabledClass:function($element,disabled){$element.removeClass('is--disabled');if(disabled){$element.addClass('is--disabled');}},allDisabled:function($elements){var me=this,allDisabled=true;$elements.each(function(index,$element){if(!me.isDisabled($element)){allDisabled=false;}});return allDisabled;},isDisabled:function($element){return $element.hasClass('is--disabled');},getValueIds:function(values){var ids=[];$(values).each(function(index,value){ids.push(value.id);});return ids;},getActiveValueIds:function(values){var ids=[];$(values).each(function(index,value){if(value.active){ids.push(value.id);}});return ids;},convertToElementList:function(elements){var $elements=[];$(elements).each(function(index,element){$elements.push($(element));});return $($elements);},getValues:function(data,$elements){var me=this;if(!data){return[];}
if(data.hasOwnProperty('values')){return data.values;}
var values=[];$(data.facetResults).each(function(index,group){$(group.values).each(function(index,item){if(me.valueExists(item.id,$elements)){values.push(item);}});});return values;},valueExists:function(value,$elements){var exists=false;$elements.each(function(index,input){var val=$(input).val()+'';if(val==value){exists=true;return false;}});return exists;}});})(jQuery,window,document,undefined);