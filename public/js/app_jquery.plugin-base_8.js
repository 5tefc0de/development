;(function($){var o=$({});$.subscribe=function(){o.on.apply(o,arguments);};$.unsubscribe=function(){o.off.apply(o,arguments);};$.publish=function(){o.trigger.apply(o,arguments);};}(jQuery));;(function($,window){'use strict';var numberRegex=/^-?\d*\.?\d*$/,objectRegex=/^[[{]/;function deserializeValue(value){try{return!value?value:value==='true'||(value==='false'?false:value==='null'?null:numberRegex.test(value)?+value:objectRegex.test(value)?$.parseJSON(value):value);}catch(e){return value;}}
function PluginBase(name,element,options){var me=this;me._name=name;me.$el=$(element);me.opts=$.extend({},me.defaults||{},options);me.eventSuffix='.'+name;me._events=[];$.expr[':']['plugin-'+name.toLowerCase()]=function(elem){return!!$.data(elem,'plugin_'+name);};me.init();$.publish('plugin/'+name+'/onInit',[me]);}
PluginBase.prototype={init:function(){throw new Error('Plugin '+this.getName()+' has to have an init function!');},destroy:function(){if(typeof console!=='undefined'&&typeof console.warn==='function'){console.warn('Plugin '+this.getName()+' should have a custom destroy method!');}
this._destroy();},update:function(){},_destroy:function(){var me=this,name=me.getName();$.each(me._events,function(i,obj){if(typeof obj==='object'){obj.el.off(obj.event);}});$.each(me.opts,function(o){delete me.opts[o];});me.$el.removeData('plugin_'+name);$.publish('plugin/'+name+'/onDestroy',[me]);return me;},_on:function(){var me=this,$el=$(arguments[0]),event=me.getEventName(arguments[1]),args=Array.prototype.slice.call(arguments,2);me._events.push({'el':$el,'event':event});args.unshift(event);$el.on.apply($el,args);$.publish('plugin/'+me._name+'/onRegisterEvent',[$el,event]);return me;},_off:function(element,event){var me=this,events=me._events,pluginEvent=me.getEventName(event),eventIds=[],$element=$(element),filteredEvents=$.grep(events,function(obj,index){eventIds.push(index);return typeof obj!=='undefined'&&pluginEvent===obj.event&&$element[0]===obj.el[0];});$.each(filteredEvents,function(index,event){$element.off(event.event);});$.each(eventIds,function(id){if(!events[id]){return;}
delete events[id];});$.publish('plugin/'+me._name+'/onRemoveEvent',[$element,event]);return me;},getName:function(){return this._name;},getEventName:function(event){var suffix=this.eventSuffix,parts=event.split(' '),len=parts.length,i=0;for(;i<len;i++){parts[i]+=suffix;}
return parts.join(' ');},getElement:function(){return this.$el;},getOptions:function(){return $.extend({},this.opts);},getOption:function(key){return this.opts[key];},setOption:function(key,value){var me=this;me.opts[key]=value;return me;},applyDataAttributes:function(shouldDeserialize){var me=this,attr;$.each(me.opts,function(key){attr=me.$el.attr('data-'+key);if(typeof attr==='undefined'){return true;}
me.opts[key]=shouldDeserialize!==false?deserializeValue(attr):attr;return true;});$.publish('plugin/'+me._name+'/onDataAttributes',[me.$el,me.opts]);return me.opts;}};$.PluginBase=PluginBase;if(typeof Object.create!=='function'){Object.create=function(o){function F(){}
F.prototype=o;return new F();};}
$.plugin=function(name,plugin){var pluginFn=function(options){return this.each(function(){var element=this,pluginData=$.data(element,'plugin_'+name);if(!pluginData){if(typeof plugin==='function'){pluginData=new plugin();}else{var Plugin=function(){PluginBase.call(this,name,element,options);};Plugin.prototype=$.extend(Object.create(PluginBase.prototype),{constructor:Plugin},plugin);pluginData=new Plugin();}
$.data(element,'plugin_'+name,pluginData);}});};window.PluginsCollection=window.PluginsCollection||{};window.PluginsCollection[name]=plugin;$.fn[name]=pluginFn;};$.overridePlugin=function(pluginName,override){var overridePlugin=window.PluginsCollection[pluginName];if(typeof overridePlugin!=='object'||typeof override!=='object'){return false;}
$.fn[pluginName]=function(options){return this.each(function(){var element=this,pluginData=$.data(element,'plugin_'+pluginName);if(!pluginData){var Plugin=function(){PluginBase.call(this,pluginName,element,options);};Plugin.prototype=$.extend(Object.create(PluginBase.prototype),{constructor:Plugin,superclass:overridePlugin},overridePlugin,override);pluginData=new Plugin();$.data(element,'plugin_'+pluginName,pluginData);}});};};})(jQuery,window);